<input type="hidden" id="agencyRequest" />
<input type="hidden" id="requestStatus" />
<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Request Detail</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        <b>RequestId:</b><br>
                    <p class="rqID"></p>
                    <p>
                        <b>RequestName:</b><br>
                    <p class="rqName"></p>
                    <p>
                        <b>Date:</b><br>
                    <p class="rqCD"></p>
                    <p>
                        <b>AgencyName:</b><br>
                    <p class="rqAN"></p>
                    <p>
                        <b>ITName:</b><br>
                    <p class="rqIT"></p>
                    <p>
                        <b>Issue Name:</b><br>
                    <p class="rqIN"></p>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>
<input type="hidden" id="companyHidden" />
<form onsubmit="createRequest(); return false">
    <div class="container">
        <!-- Modal -->
        <div class="modal fade2" id="createModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title"><b>Tạo sự cố mới</b></h3>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <input id="idCom" type="hidden" />
                            <input id="idAgency" type="hidden" />
                            <div class="col-md-12">
                                <label>Chi Nhánh:</label>
                                <select class="form-control select2" type="button" style="width: 100%;" id="comboAgency" onchange="getSers()"></select>
                            </div>
                            <div class="col-md-12" style="margin-top:10px">
                                <label>Danh mục:</label>
                                <select type="button" class="form-control select2" style="width: 100%;" id="comboSerName" onchange="getSerItems()"></select>
                            </div>
                            <input id="idSer" type="hidden" />
                            <div class="col-md-12" style="margin-top:10px">
                                <label>Hiện tượng:</label>
                                <select class="form-control select2" type="button" style="width: 100%;" id="comboSerItem" onchange="getDevice()"></select>
                            </div>
                            <div class="col-md-12" style="margin-top:10px">
                                <label>Thiết Bị:</label>

                                <select multiple class="form-control select2" type="button" style="width: 100%;" id="comboDevices"></select>
                            </div>
                            <div class="col-md-12" style="margin-top:10px">
                                <label>Số Điện Thoại:</label>
                                <input id="PhoneC" type="text" disabled="disabled" class="form-control" required>
                            </div>
                            <div class="col-md-12" style="margin-top:10px">
                                <label>Mô Tả hiện tượng:</label>
                                <textarea id="DescripC" class="form-control" rows="3" placeholder="Ví dụ: mất sóng wifi tầng trệt, khó truy cập..."></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearModal()">Đóng</button>
                        <button type="submit" class="btn btn-primary">Tạo Mới</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<form onsubmit="updateRequest(); return false">
    <div class="modal fade" id="EditModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title"><b>Chỉnh sửa thông tin</b></h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <p>
                        <p id="idd"></p>
                        <div class="col-md-12">
                            <b>Tên Công Ty Sở Hữu:</b>
                            <select id="q" class="form-control" disabled="disabled"></select>
                        </div>
                        <div class="col-md-12" style="margin-top:10px">
                            <b>Tên Tài Khoản Ứng Dụng:</b><br>
                            <select id="w" class="form-control" disabled="disabled"></select>
                        </div>
                        <div class="col-md-12" style="margin-top:10px">
                            <b>Tên Chi Nhánh</b><br>
                            <input id="e" type="text" class="form-control">
                        </div>
                        <div class="col-md-12" style="margin-top:10px">
                            <b>Địa Chỉ:</b><br>
                            <input id="r" type="text" class="form-control">
                        </div>
                        <div class="col-md-12" style="margin-top:10px">
                            <b>Số Điện Thoại:</b><br>
                            <input id="t" type="text" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearModal()">Đóng</button>
                    <button type="submit" class="btn btn-primary">Chỉnh Sửa</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="row col-md-12">
    <h3 class="city">Quản lý sự cố</h3>
</div>
<div class="row col-md-12">
    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-yellow"><i class="fa fa-cogs" aria-hidden="true"></i></span>

            <div class="info-box-content">
                <span class="info-box-text" style="width: 200px">Chờ xử lý</span>
                <span class="info-box-number" id="wailting">0</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-primary"><i class="fa fa-wrench" aria-hidden="true"></i></span>

            <div class="info-box-content">
                <span class="info-box-text" style="width: 200px">Đang xử lý</span>
                <span class="info-box-number" id="processing">0</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
    <!-- fix for small devices only -->
    <div class="clearfix visible-sm-block"></div>

    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-green"><i class="fa fa-check" aria-hidden="true"></i></span>

            <div class="info-box-content">
                <span class="info-box-text" style="width: 200px">Hoàn thành</span>
                <span class="info-box-number" id="done">0</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
    <div class="col-md-3 col-sm-6 col-xs-12">
        <div class="info-box">
            <span class="info-box-icon bg-red"><i class="fa fa-times" aria-hidden="true"></i></span>

            <div class="info-box-content">
                <span class="info-box-text" style="width: 200px">Hủy bỏ</span>
                <span class="info-box-number" id="cancel">0</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        <!-- /.info-box -->
    </div>
    <!-- /.col -->
</div>
<style>
    .city {
        background-color: azure;
        color: black;
        padding: 1%;
        border-left: solid cadetblue;
        width: 100%;
    }
</style>

<!-- Datatable -->
<div class="row col-md-12">
    <h3 class="city">Sự cố đã báo</h3>
</div>

<div class="row col-md-12">
    <div class="col-md-4 col-sm-6 col-xs-12">
        <b>Lọc theo thời gian:</b><br>
        <input class="form-control" type="button" id="requestCreateDate" style="width:100%; margin-bottom:15px;text-align:left;"></input>
    </div>
    <div class="col-md-4 col-sm-6 col-xs-12">
        <b>Lọc theo công ty:</b><br>
        <select class="form-control select2" type="button" id="requestCompany" style="width:100%; margin-bottom:15px;"></select>
    </div>
    <div class="col-md-4 col-sm-6 col-xs-12">
        <b>Lọc theo loại sự cố:</b><br>
        <select class="form-control select2" type="button" id="requestServiceItem" style="width:100%; margin-bottom:15px;"></select>
    </div>
</div>
@*<div class="row col-md-12">    
    <button type="button" class="btn btn-primary fa fa-eye pull-right" data-toggle="modal" data-target="" onclick="loadRequest()"><font face="verdana"> Áp dụng bộ lọc</button>
</div>*@

<div class="row col-md-12">
    <table id="detail-table" class="table table-hover" cellspacing="0" style="table-layout: auto">
        <thead>
            <tr>
                <th><label>STT</label></th>
                <th><label>Tên Sự Cố</label></th>
                <th><label>Thời gian</label></th>
                <th><label>Tạo bởi</label></th>
                <th><label>Độ ưu tiên</label></th>
                <th><label>Trạng thái</label></th>
                <th><label>Xử lý bởi/Tùy chọn</label></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div class="NewThing">
        <button type="button" class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="" onclick="showCreateModal()"><font face="verdana"> Tạo Sự Cố</button>
    </div>
</div>

<link href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
@section scripts {
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/asvd/dragscroll/master/dragscroll.js"></script>
    <script src="~/AdminLTE/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/AdminLTE/bower_components/select2/dist/js/select2.js"></script>
    <link href="~/AdminLTE/bower_components/select2/dist/css/select2.css" rel="stylesheet" />
    <script src="~/AdminLTE/bower_components/select2/dist/js/select2.js"></script>

    <script>
        $(document).ready(function () {
            loadRequest();
            loadRequestStatistic();
            showAgency();
            startRefresh();
            showCompany();
            showServiceItems();
        });
        $('#comboDevices').select2({
            dropdownParent: $('#createModal')
        });
        $('#requestCreateDate').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            forceParse: false,
        })
        function startRefresh() {
            setTimeout(startRefresh, 1000);
            loadRequest();
            loadRequestStatistic();
        }
        var isWaitingHeroAccept = false;
        var currentRequestId = 0;
        function loadRequestStatistic() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetRequestStatistic", "Request")',
                data: {
                },
                success: function(result) {
                    var statusList = result.result.ObjReturn;
                    var i;
                    for (i = 0; i < statusList.length; ++i) {
                        if (statusList[i].StatusId === 1) {
                                $('#wailting').text(statusList[i].NumberOfStatus);
                        }
                        else if (statusList[i].StatusId === 2) {
                            $('#processing').text(statusList[i].NumberOfStatus);
                        }
                        else if (statusList[i].StatusId === 3) {
                            $('#done').text(statusList[i].NumberOfStatus);
                        }
                        else if (statusList[i].StatusId === 4) {
                            $('#cancel').text(statusList[i].NumberOfStatus);
                        }
                    }
                },
                error: function(error) {
                    showMessage("Cõ lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }

        function loadRequest() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAllRequest", "Request")',
                data: {
                    companyId: $("#requestCompany").val(),
                    serviceItemId: $("#requestServiceItem").val()
                },
                success: function (result) {
                    if (!result.result.ObjReturn != null)
                        initDatatable(result.result.ObjReturn);
                },
                error: function(error) {
                    showMessage("Cõ lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }

    function LocSuCo() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAllRequest", "Request")',
                data: {
                    
                },
                success: function(result) {
                    initDatatable(result.result.ObjReturn);
                },
                error: function(error) {
                    showMessage("Cõ lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }

        function showCompany() {
            $('#requestCompany')
                .find('option')
                    .remove()
                    .end();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAllCompany", "Company")',
                data: {
                },

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var len = data.result.ObjReturn.length;
                    var html = '<option value="0">--Lọc theo công ty--</option>';
                    for (var i = 0; i < len; i++) {
                        html += '<option value="' +
                            data.result.ObjReturn[i].CompanyId +
                            '">' +
                            data.result.ObjReturn[i].CompanyName +
                            '</option>';
                    }
                    $('#requestCompany').append(html);
                }
            });
        }
        function showServiceItems() {
            $('#requestServiceItem')
                    .find('option')
                    .remove()
                    .end();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAllServiceItemAll", "ServiceItem")',
                data: {
                },

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var len = data.result.ObjReturn.length;
                    var html = '<option value="0">--Lọc theo hiện tượng--</option>';
                    for (var i = 0; i < len; i++) {
                        html += '<option value="' +
                            data.result.ObjReturn[i].ServiceItemId +
                            '">' +
                            data.result.ObjReturn[i].ServiceItemName +
                            '</option>';
                    }
                    $('#requestServiceItem').append(html);
                }
            });
        }

        function initDatatable(data) {
            $("#detail-table").dataTable().fnDestroy();
            $("#detail-table").dataTable({
                stateSave: true,
                "bFilter": true,
                "bSort": false,
                "data": data,
                "bRetrieve": true,
                "bScrollCollapse": true,
                "bProcessing": true,
                "searching": false,
                "oLanguage": {                    
                    //"sSearch": "Tìm kiếm:",
                    //"sSearchPlaceholder": "",
                    "sZeroRecords": "Không có dữ liệu phù hợp",
                    "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                    "sEmptyTable": "Không có dữ liệu",
                    "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                    "sLengthMenu": "Hiển thị _MENU_ dòng",
                    "sProcessing": "Đang xử lý...",
                    "oPaginate": {
                        "sNext": "<i class='fa fa-chevron-right'></i>",
                        "sPrevious": "<i class='fa fa-chevron-left'></i>"
                    }
                },
                "aoColumnDefs": [
                    {
                        "aTargets": [0, 1, 2, 3, 4, 5, 6],
                        "bSortable": false,
                        "sClass": "text-center",
                    },


                    //{
                    //    "aTargets": [7],
                    //    "mRender": function (data, type, row) {
                    //        var edit = "<a title='Chỉnh sửa' class='btn btn-sm btn-primary' onclick='callShowEditModal(" + data + ")'><i class='glyphicon glyphicon-pencil'></i></a>";
                    //        var del = "<a title='Xóa' class='btn btn-sm btn-danger' onclick='deleteElementChil(" + data + ")'><i class='glyphicon glyphicon-trash'></i></a>";
                    //        return edit + " " + del;
                    //    },
                    //}
                ],
                "columns": [
                    { "data": "NumberOfRecord" },
                    {
                        "data": "RequestName",
                        "mRender": function(data, type, full) {
                            return '<a href="RequestDetail/' + full.RequestId + '">' + data + '</a>';
                        }
                    },
                    { "data": "CreateDate" },
                    { "data": "AgencyName" },
                    //{ "data": "StatusName" },
                    {
                        "aTargets": [4],
                        "mRender": function (data, type, full) {
                            return full.Priority;
                        }
                    },
                    {
                        "aTargets": [5],
                        "mRender": function (data, type, full) {
                            if (full.StatusName === "Chờ xử lý")
                                return '<span class = "label label-warning">' + full.StatusName + '</span>';
                            else if (full.StatusName === "Đang xử lý")
                                return '<span class = "label label-primary">' + full.StatusName + '</span>';
                            else if (full.StatusName === "Hoàn thành")
                                return '<span class = "label label-success">' + full.StatusName + '</span>';
                            else if (full.StatusName === "Hủy bỏ")
                                return '<span class = "label label-danger">' + full.StatusName + '</span>';
                            else
                                return '<span class = "label label-default">' + full.StatusName + '</span>';
                        }
                    },

                    {
                        "aTargets": [6],
                        "mRender": function (data, type, full) {
                            if (full.StatusName === "Chờ hủy") {
                                var del = ' <button type="button" class="btn btn-danger fa fa-close" data-toggle="modal" data-target="" onclick="removeResquest(' + full.RequestId + ')"></button>';
                                return del;
                            }
                            else if (full.StatusName === "Hủy bỏ") {
                                return '<span class = "label label-danger">Đã hủy theo yêu cầu</span>';
                            }
                            else if(full.ITSupporterName !== "") {
                                return full.ITSupporterName;
                            }
                            else if (isWaitingHeroAccept === true && full.RequestId === currentRequestId) {
                                return '<span class = "label label-warning">Đợi nhân viên phản hồi</span>';
                            }
                            else {
                                var asignHero = '<button type="button" class="btn btn-info btn fa fa-user-plus" data-toggle="modal" data-target="" onclick="asignHero(' + full.RequestId + ')"></button>';
                                var edit = ' <button type="button" class="btn btn-warning fa fa-pencil" data-toggle="modal" data-target="" onclick="getDataEdit(' + full.RequestId + ')"></button>';
                                var del = ' <button type="button" class="btn btn-danger fa fa-close" data-toggle="modal" data-target="" onclick="removeResquest(' + full.RequestId + ')"></button>';
                                return asignHero;
                            }
                        }
                    },
                ],
                "bAutoWidth": false,
            });
        }
        function showCreateModal() {
            $('#createModal').modal('show');
        }
        function clearModal() {
            $("#comboDevices").empty();
            $('#createModal').on('hidden.bs.modal', function (e) {
                $(this)
                    .find("input,textarea,select")
                    .val('')
                    .end()
                    .find("input[type=checkbox], input[type=radio]")
                    .prop("checked", "")
                    .end();
            })
        }
        function showAgency() {
            $('#comboAgency')
                .find('option')
                .remove()
                .end();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAllAgency", "Agency")',
                data: {
                },
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var obj = data.result.ObjReturn;
                    var html = '<option value="0">--Chọn chi nhánh--</option>';
                    if (obj != null) {
                        for (var i = 0; i < obj.length; i++) {
                            html += '<option value="' +
                                obj[i].AgencyId +
                                '">' +
                                obj[i].AgencyName +
                                '</option>';
                        }
                    }
                    $('#comboAgency').append(html);
                }
            });
        }
        function getSers() {
            var idd = $('#comboAgency').val();
            $('#idAgency').val(idd);
            var id = $('#idAgency').val();
            $.ajax({
                url: '@Url.RouteUrl(new {action = "GetAgencyDetail", controller = "Agency"})',

                data: {
                    agency_id: id
                },
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    $("#PhoneC").val(data.result.ObjReturn.Telephone);
                }
            });
            $('#comboSerName')
                .find('option')
                .remove()
                .end();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetServiceITSupportByAgencyId", "Request")',
                data: {
                    agencyId: id
                },
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var obj = data.result.ObjReturn;
                    var html = '<option value="0">--Chọn danh mục--</option>';
                    if (obj != null) {
                        for (var i = 0; i < obj.length; i++) {
                            html += '<option value="' +
                                obj[i].ServiceITSupportId +
                                '">' +
                                obj[i].ServiceName +
                                '</option>';
                        }
                    }
                    $('#comboSerName').append(html);
                }
            });
        }
        function getSerItems() {
            var iddS = $('#comboSerName').val();
            $('#idSer').val(iddS);
            var idS = $('#idSer').val();
            $('#comboSerItem')
                .find('option')
                .remove()
                .end();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAllServiceItemByServiceId", "Request")',
                data: {
                    serviceId: idS
                },
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var obj = data.result.ObjReturn;
                    var html = '<option value="0">--Chọn hiện tượng--</option>';
                    if (obj != null) {
                        for (var i = 0; i < obj.length; i++) {
                            html += '<option value="' +
                                obj[i].ServiceItemId +
                                '">' +
                                obj[i].ServiceItemName +
                                '</option>';
                        }
                    }
                    $('#comboSerItem').append(html);
                }
            });
        }
        function getDevice() {
            var idd = $('#comboAgency').val();
            $('#idAgency').val(idd);
            var id = $('#idAgency').val();
            var iddS = $('#comboSerName').val();
            $('#idSer').val(iddS);
            var idS = $('#idSer').val();
            $('#comboDevices')
                .find('option')
                        .remove()
                        .end();
                $.ajax({
                type: 'GET',
                url: '@Url.RouteUrl(new {action = "GetAllDeviceByAgencyIdAndServiceId", controller = "Request" })',
                    data: {
                        agencyId: id,
                        serviceId: idS
                    },
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var len = data.result.ObjReturn.length;
                    var html = '';
                    for (var i = 0; i < len; i++) {
                        html += '<option value="' +
                            data.result.ObjReturn[i].DeviceId +
                            '">' +
                            data.result.ObjReturn[i].DeviceName +
                            '</option>';
                    }
                    $('#comboDevices').append(html);
                }
            });
        }
        function asignHero(requestId) {
            currentRequestId = requestId
            $.ajax({
                url: '@Url.RouteUrl(new {action = "FindITSupporterByRequestId", controller = "Request"})',

                data: {
                    requestId: requestId
                },
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    if (!data.result.IsError) {
                        swal(data.result.SuccessMessage, "", "success");
                        isWaitingHeroAccept = true;
                        currentRequestId = requestId
                        loadRequest();
                        loadRequestStatistic();
                    } else
                        swal(data.result.WarningMessage, "", "error");
                }
            });
        }

        function getData(id) {

            $.ajax({
                //url: '@Url.RouteUrl(new {action = "Edit", controller = "Home"})',
                url: '@Url.RouteUrl(new {action = "GetRequestDetail", controller = "Request"})',

                data: {
                    request_id: id
                },
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    $(".rqID").text(data.result.RequestId);
                    $(".rqName").text(data.result.RequestName);
                    $(".rqCD").text(data.result.CreateDate);
                    $(".rqAN").text(data.result.AgencyName);
                    $(".rqIT").text(data.result.ITName);
                    $(".rqIN").text(data.result.IssueName);

                }
            });
            $('#exampleModal').modal('show');
        }
        function getDataEdit(id) {
            $.ajax({
                url: '@Url.RouteUrl(new {action = "GetAgencyDetail", controller = "Agency"})',

                data: {
                    agency_id: id
                },
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#q").val(data.result.ObjReturn.CompanyId);
                    $("#w").val(data.result.ObjReturn.AccountId);
                    $("#idd").val(data.result.ObjReturn.AgencyId);
                    $("#e").val(data.result.ObjReturn.AgencyName);
                    $("#r").val(data.result.ObjReturn.Address);
                    $("#t").val(data.result.ObjReturn.Telephone);
                }
            });
            $('#EditModal').modal('show');
        }

    function createRequest() {
        var deviceIds = $('#comboDevices').val();
        var tickets = new Array();
        for (i = 0; i < deviceIds.length; ++i) {
            var ticket = {
                DeviceId: deviceIds[i]
            }
            tickets.push(ticket);
        }

             var empObj = {
                 AgencyId: $('#comboAgency').val(),
                 RequestCategoryId: 3,
                 ServiceItemId: $('#comboSerItem').val(),
                 RequestName: $("#comboAgency option:selected").text() + " - " + $("#comboSerItem option:selected").text(),
                 Tickets: tickets,
                AgencyTelephone: $('#PhoneC').val(),
                RequestDesciption: $('#DescripC').val(),
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateRequest", "Request")',
                data: JSON.stringify(empObj),

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (!data.result.isError) {
                        clearModal();
                        $('#createModal').modal('hide');
                        loadRequest();
                        swal(data.result.SuccessMessage, "", "success");
                    }
                    else
                        swal(data.result.WarningMessage, "", "error");
                }
            });
        }
        function updateRequest() {
            var empObj = {
                AgencyId: $('#idd').val(),
                AgencyName: $('#e').val(),
                Address: $('#r').val(),
                Telephone: $('#t').val(),
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("UpdateAgency", "Agency")',
                data: JSON.stringify(empObj),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (!data.result.isError) {
                        $('#EditModal').modal('hide');
                        loadCompanyAgency();
                        swal(data.result.SuccessMessage, "", "success");
                    }
                    else
                        swal(data.result.WarningMessage, "", "error");
                }
            });
        }
        function removeResquest(id) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetRequestBytRequestId", "Request")',
                data: {
                    requestId: id
                },

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#requestStatus').val(data.result.ObjReturn.RequestStatusId);
                }
            });
            //$('#modalConfirmDelete').modal('show');
            swal({
                title: 'Bạn có Chắc Chắn Muốn Hủy?',
                text: "Sự Cố Đã Hủy Không Thể Hoàn Lại!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Quay Lại',
                confirmButtonText: 'Chấp Nhận Hủy!'
            }).then(function () {
                deleteRequest();
            });
            $('#agencyRequest').val(id);

        }

        //delete agency
        function deleteRequest() {
            var request_idd = $('#agencyRequest').val();
            var requestStt_idd = 4;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("ApproveCancelRequest", "Request")',
                data: {
                    request_id: request_idd,
                    status: requestStt_idd
                },

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    swal(
                        'Đã Xóa!',
                        'Sự Cố Của Bạn Đã Được Hủy.',
                        'success'
                    )
                    loadRequest();
                }
            });
        }
    </script>

}
