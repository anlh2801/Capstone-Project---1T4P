@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Modal title</h4>
            </div>
            <div class="modal-body">
                <p>
                    <b>Message:</b><br>
                    <input class="message-edit-text" type="text" size="20">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="ViewModal" tabindex="-1" role="dialog" aria-labelledby="exampleLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>

                </div>
                <div class="modal-body">
                    <p>
                        <b>RoleName:</b><br>
                    <p id="accRole"></p>
                    <p>
                        <b>Username:</b><br>
                    <p id="accName"></p>
                    <p>
                        <b>Password:</b><br>
                    <p id="accPass"></p>
                    <p>
                        <b>CreateDate:</b><br>
                    <p id="accCreateDate"></p>
                    <p>
                        <b>UpdateDate:</b><br>
                    <p id="accUpdateDate"></p>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="container">
    <!-- Modal -->
    <div class="modal fade2" id="CreateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        <b>RoleId:</b><br>
                        <select id="comboRole"></select>
                    <p>
                        <b>Username:</b><br>
                        <input type="text" id="accNameCreate"></input>
                    <p>
                        <b>Password:</b><br>
                        <input type="text" id="accPassCreate"></input>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="createAccount()">Create New</button>
                </div>
            </div>
        </div>
    </div>

</div>
<!--deletemodal-->
<div class="modal fade" id="modalConfirmDelete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-sm modal-notify modal-danger" role="document">
        <!--Content-->
        <div class="modal-content text-center">
            <!--Header-->
            <div class="modal-header d-flex justify-content-center">
                <p class="heading">Are you sure you want to delete this item?</p>
            </div>

            <!--Body-->
            <div class="modal-body">

                <i class="fa fa-times fa-4x animated rotateIn"></i>

            </div>

            <!--Footer-->
            <div class="modal-footer flex-center">
                <a href="#" onClick="deleteAccount(); return false;" class="btn  btn-outline-danger">Yes</a>
                <a type="button" class="btn  btn-danger waves-effect" data-dismiss="modal">No</a>
            </div>
        </div>
        <!--/.Content-->
    </div>
</div>
<input type="hidden" id="accountHidden" />
@*Edit modal*@
<div class="modal fade" id="EditModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                <p id="idE"></p>
                <p>
                    <b>RoleId:</b><br>
                    <select id="comboRoleEdit" class="form-control" disabled="true"></select>
                <p>
                    <b>Username:</b><br>
                    <input type="text" id="accNameEdit"></input>
                <p>
                    <b>Password:</b><br>
                    <input type="text" id="accPassEdit"></input>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="UpdateAccount()">Update</button>
            </div>
        </div>
    </div>
</div>
<div class="row col-md-12">
    <h3>Tất Cả Tài Khoản</h3>

    <table id="detail-table" class="table table-hover" cellspacing="0" style="table-layout: auto">
        <thead>
            <tr>
                <th><label>STT</label></th>
                <th><label>Quyền</label></th>
                <th><label>Tên đăng nhập</label></th>
                <th><label>Ngày tạo</label></th>
                <th><label>Chức Năng</label></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div class="NewThing">
        <button type="button" class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="" onclick="showCreateModal()"><font face="verdana"> Tạo Tài Khoản</button>
    </div>
</div>

<link href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
@section scripts {
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/asvd/dragscroll/master/dragscroll.js"></script>
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function() {
            loadAccount();
            showRole();
        });

        function loadAccount() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAllAccount", "Account")',
                data: {
                },
                success: function(result) {
                    initDatatable(result.result.ObjReturn);
                },
                error: function(error) {
                    showMessage("Cõ lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }
        function createAcccount() {
           $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateAccount", "Account")',
               data: {
                    'roleid': $('#RoleId').val(),
                    'username': $('#Username').val(),
                    'password': $('#Password').val(),


                },
                success: function(result) {
                    if (result.isSucess) {

                        window.location.href = result.urlReturn.toString();
                    };
                },
                error: function(error) {
                    showMessage("Cõ lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }

        function initDatatable(data) {
            $("#detail-table").dataTable().fnDestroy();
            $("#detail-table").dataTable({
                stateSave: true,
                "bFilter": true,
                "bSort": false,
                "data": data,
                "bRetrieve": true,
                "bScrollCollapse": true,
                "bProcessing": true,
                "oLanguage": {
                    "sSearch": "Tìm kiếm:",
                    "sSearchPlaceholder": "Thành phần con",
                    "sZeroRecords": "Không có dữ liệu phù hợp",
                    "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                    "sEmptyTable": "Không có dữ liệu",
                    "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                    "sLengthMenu": "Hiển thị _MENU_ dòng",
                    "sProcessing": "Đang xử lý...",
                    "oPaginate": {
                        "sNext": "<i class='fa fa-chevron-right'></i>",
                        "sPrevious": "<i class='fa fa-chevron-left'></i>"
                    }
                },
                "aoColumnDefs": [
                    {
                        "aTargets": [0, 1, 2, 3, 4],
                        "bSortable": false,
                        "sClass": "text-center",
                    },
                ],
                "columns": [
                    { "data": "NumericalOrder" },
                    { "data": "RoleName" },
                    { "data": "Username"},
                    { "data": "CreateAt" },
                    {
                        "aTargets": [4],
                        "mRender": function (data, type, full) {
                            var view = ' <button type="button" class="btn btn-info fa fa-eye" data-toggle="modal" data-target="" onclick="getData(' + full.AccountId + ')"></button>';
                            var edit = ' <button type="button" class="btn btn-warning fa fa-pencil" data-toggle="modal" data-target="" onclick="getDataEdit(' + full.AccountId + ')"></button>';
                            var del = ' <button type="button" class="btn btn-danger fa fa-trash" data-toggle="modal" data-target="" onclick="removeAccount(' + full.AccountId + ')"></button>';
                            return view + " " + edit + " " + del;
                        }
                    },
                ],
                "bAutoWidth": false,
            });
        }

        function getData(idd) {

            $.ajax({
                url: '@Url.RouteUrl(new {action = "ViewProfile", controller = "Account"})',

                data: {
                    account_id: idd
                },
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#accRole").text(data.result.ObjReturn.RoleName);
                    $("#accName").text(data.result.ObjReturn.Username);
                    $("#accPass").text(data.result.ObjReturn.Password);
                    $("#accCreateDate").text(data.result.ObjReturn.CreateAt);
                    $("#accUpdateDate").text(data.result.ObjReturn.UpdateAt);

                }
            });
            $('#ViewModal').modal('show');
        }

        function showRole() {
            $('#comboRole, #comboRoleEdit')
                .find('option')
                .remove()
                .end();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAllRole", "Role")',
                data: {
                },

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var obj = data.result.ObjReturn;
                    var html = '';
                    for (var i = 0; i < obj.length; i++) {
                        html += '<option value="' +
                            obj[i].RoleId +
                            '">' +
                            obj[i].RoleName
                            '</option>';
                    }
                    $('#comboRole').append(html);
                    $('#comboRoleEdit').append(html);

                }
            });
        }
        function showCreateModal() {
            $('#CreateModal').modal('show');
        }
        function createAccount() {
            var empObj = {
                RoleId: $('#comboRole').val(),
                Username: $('#accNameCreate').val(),
                Password: $('#accPassCreate').val(),
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateAccount", "Account")',
                data: JSON.stringify(empObj),

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#CreateModal').modal('hide');
                    if (!data.result.isError) {
                        swal(data.result.SuccessMessage, "", "thành công");
                    }
                    else
                        swal(data.result.WarningMessage, "", "thất bại");
                        loadAccount();
                }
            });
        }
        function removeAccount(id) {
            $('#modalConfirmDelete').modal('show');
            $('#accountHidden').val(id);
        }
        function deleteAccount() {
            var account_id = $('#accountHidden').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("RemoveAccount", "Account")',
                data: {
                    account_id: account_id
                },

                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#modalConfirmDelete').modal('hide')
                    loadAccount();
                }
            });
        }
        function getDataEdit(id) {
            $.ajax({
                url: '@Url.RouteUrl(new {action = "ViewProfile", controller = "Account"})',

                data: {
                    account_id: id
                },
                type: 'GET',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#idE").val(data.result.ObjReturn.AccountId);
                    $("#comboRoleEdit").val(data.result.ObjReturn.RoleId);
                    $("#accNameEdit").val(data.result.ObjReturn.Username);
                    $("#accPassEdit").val(data.result.ObjReturn.Password);
                }

            });
            $('#EditModal').modal('show');
        }
        function UpdateAccount() {
            var empObj = {
                AccountId: $('#idE').val(),
                UserName: $('#accNameEdit').val(),
                Password: $('#accPassEdit').val(),
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("UpdateProfile", "Account")',
                data: JSON.stringify(empObj),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#EditModal').modal('hide');
                    if (!data.result.isError) {
                        alert(data.result.SuccessMessage);
                    }
                    else
                        alert(data.result.WarningMessage);
                        loadAccount();
                }
            });
        }
    </script>

}
